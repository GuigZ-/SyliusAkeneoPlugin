<?php

declare(strict_types=1);

namespace Tests\Synolia\SyliusAkeneoPlugin\PHPUnit\Command;

use Akeneo\Pim\ApiClient\Api\ProductApi;
use donatj\MockWebServer\Response;
use Psr\Log\LoggerInterface;
use Symfony\Component\Console\Output\ConsoleOutput;
use Symfony\Component\HttpFoundation\Response as HttpResponse;
use Synolia\SyliusAkeneoPlugin\Command\BatchImportProductsCommand;
use Synolia\SyliusAkeneoPlugin\Command\ImportProductsCommand;
use Tests\Synolia\SyliusAkeneoPlugin\PHPUnit\Api\ApiTestCase;
use Symfony\Bundle\FrameworkBundle\Console\Application;
use Symfony\Component\Console\Tester\CommandTester;

class ImportProductsCommandTest extends ApiTestCase
{
    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
    }

    public function testFilter(): void
    {
        $application = new Application(static::$kernel);

        $command = $application->find(ImportProductsCommand::getDefaultName());
        $commandTester = new CommandTester($command);

        $response = new Response($this->getFileContent('products_all_with_filter.json'), [], HttpResponse::HTTP_OK);

        $this->server->setResponseOfPath(
            '/' . sprintf(ProductApi::PRODUCTS_URI),
            $response
        );

        $commandTester->execute(
            [
                '--filter' => 'provider=synolia',
            ]
        );

        $commandTester->assertCommandIsSuccessful();

        // the output of the command in the console
        $output = $commandTester->getDisplay();

        $this->assertStringContainsString('Provider: synolia', $output);
    }
}